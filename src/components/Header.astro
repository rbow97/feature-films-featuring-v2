---
import MobileSearch from "./MobileSearch";
---

<header
  class="w-full py-4 flex gap-4 md:gap-[24px] items-center justify-between mx-auto px-md relative"
>
  <img
    src="/film-camera.svg"
    class="h-[32px] w-[32px] md:h-[48px] md:w-[48px] hidden md:block"
    height="40"
  />
  <search-wrapper
    class="grow max-w-screen-2xl flex items-center gap-4 md:gap-[24px]"
  >
    <label for="text-input" class="sr-only">Search for someone</label>
    <input
      autocomplete="off"
      id="text-input"
      name="text-input"
      placeholder='Try searching "Rami Malek"'
      type="text"
      class="rounded-2xl bg-primary-lightGrey border border-primary-grey pl-3 h-12 md:h-14 w-full"
    />
    <button
      class="flex items-center justify-center bg-primary-lightGrey border-2 rounded-full border-primary-grey shrink-0 h-[48px] w-[48px]"
      id="search-people-button"
    >
      <div
        class="h-3 w-3 border-t-2 border-primary-black border-r-2 relative after:absolute after:w-0.5 after:h-5 after:-right-0.5 after:-top-[1px] after:rotate-45 after:bg-primary-black after:origin-top transition-all after:transition-all after:duration-500 after:ease-secondary duration-500 ease-secondary rotate-45 group-hover:translate-x-2 group-hover:after:h-7"
      >
      </div>
    </button>
  </search-wrapper>
  <!-- <MobileSearch client:load /> -->
</header>

<script>
  import { handleInputSearchButton } from "@utils/handleInputSearch";

  class SearchWrapper extends HTMLElement {
    constructor() {
      super();
      const textInputString = "#text-input";
      const searchPeopleButton = "#search-people-button";
      const textInput: HTMLTextAreaElement =
        this.querySelector(textInputString)!;
      const searchPeople: HTMLButtonElement =
        this.querySelector(searchPeopleButton)!;

      searchPeople.addEventListener("click", function (e) {
        handleInputSearchButton(textInput.value);
      });

      textInput.addEventListener("keydown", function (e) {
        if (e.key === "Enter") {
          e.preventDefault();
          handleInputSearchButton((e.target as HTMLTextAreaElement).value);
        }
      });
    }
  }

  customElements.define("search-wrapper", SearchWrapper);
</script>
