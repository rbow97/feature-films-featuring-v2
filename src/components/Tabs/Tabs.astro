---

---

<nav-wrapper class="w-full overflow-x-auto">
  <nav
    class="tabs-container rounded-2xl pb-sm gap-xs flex justify-between text-xs md:text-sm h-fit md:w-fit min-w-max overflow-x-auto"
  >
    <a
      href="/"
      class="tab-btn border border-primary-grey rounded-[40px] py-1 px-3 md:py-2 text-sm flex gap-1.5 items-center justify-center h-fit relative hover:bg-primary-grey transition-bg ease duration-200"
      data-tab="popular-people"
    >
      <p class="whitespace-nowrap">Popular People</p>
    </a>
    <a
      href="/popular-movies"
      class="tab-btn border border-primary-grey rounded-[40px] py-1 px-3 md:py-2 text-sm flex gap-1.5 items-center justify-center h-fit hover:bg-primary-grey relative transition-bg ease duration-200"
      data-tab="popular-movies"
    >
      <p class="whitespace-nowrap">Popular Movies</p>
    </a>
    <a
      href="/popular-tv"
      class="tab-btn border border-primary-grey rounded-[40px] py-1 px-3 md:py-2 text-sm flex gap-1.5 items-center justify-center hover:bg-primary-grey h-fit relative transition-bg ease duration-200"
      data-tab="popular-tv"
    >
      <p class="whitespace-nowrap">Popular TV</p>
    </a>
    <a
      href="/now-playing"
      class="tab-btn border border-primary-grey rounded-[40px] py-1 px-3 md:py-2 text-sm flex gap-1.5 items-center justify-center hover:bg-primary-grey h-fit relative transition-bg ease duration-200"
      data-tab="now-playing"
    >
      <p class="whitespace-nowrap">Now Playing</p>
    </a>
    <a
      href="/top-rated"
      class="tab-btn border border-primary-grey rounded-[40px] py-1 px-3 md:py-2 text-sm flex gap-1.5 items-center justify-center hover:bg-primary-grey h-fit relative transition-bg ease duration-200"
      data-tab="top-rated"
    >
      <p class="whitespace-nowrap">Top Rated</p>
    </a>
  </nav>
</nav-wrapper>

<style>
  .tabs-container {
    position: relative;
    overflow: hidden;
  }

  .animated-bg {
    position: absolute;
    top: 4px;
    left: 0;
    width: 0;
    height: calc(100% - 8px);
    background-color: #000000;
    border-radius: 40px;
    transition:
      width 0.3s ease,
      left 0.3s ease;
    z-index: 0;
  }

  .tab-btn {
    position: relative;
    z-index: 1;
    cursor: pointer;
  }

  .active {
    /* background-color: #007bff; Active background color */
    background-color: transparent;
    border-color: #011502;
  }

  .tab-btn p {
    z-index: 2;
    position: relative;
  }
</style>

<script>
  import { navigate } from "astro:transitions/client";

  class NavWrapper extends HTMLElement {
    constructor() {
      super();

      const tabs: NodeListOf<HTMLAnchorElement> =
        document.querySelectorAll(".tab-btn")!;

      // Load the active tab from localStorage
      const activeTabData = localStorage.getItem("activeTab") ?? false;

      setTabBorderBasedOnLocalStorage(activeTabData, tabs);
      setActiveTabAndNavigate(tabs);
    }
  }

  customElements.define("nav-wrapper", NavWrapper);

  function setTabBorderBasedOnLocalStorage(
    activeTabData: string | false,
    tabs: NodeListOf<HTMLAnchorElement>
  ) {
    if (activeTabData) {
      const activeTab = document.querySelector(
        `.tab-btn[data-tab="${activeTabData}"]`
      );

      if (activeTab) {
        activeTab.classList.add("active");
      }
    } else {
      const currentPath = window.location.pathname;
      let matchedTab = null;

      tabs.forEach((tab) => {
        const tabHref = tab.getAttribute("href");
        if (tabHref && currentPath.includes(tabHref)) {
          tab.classList.add("active");
          matchedTab = tab;
        } else {
          tab.classList.remove("active");
        }
      });
    }
  }

  function setActiveTabAndNavigate(tabs: NodeListOf<HTMLAnchorElement>) {
    tabs.forEach((tab) => {
      tab.addEventListener("click", (e) => {
        e.preventDefault(); // Prevent the default anchor behavior

        // Remove active class from all tabs
        tabs.forEach((tab) => tab.classList.remove("active"));

        // Add active class to the clicked tab
        tab.classList.add("active");

        // Store the clicked tab's data-tab in localStorage
        const tabData = tab.getAttribute("data-tab")!;
        localStorage.setItem("activeTab", tabData);

        // Delay the rerouting by 300ms
        setTimeout(() => {
          const href = tab.getAttribute("href");
          if (href) {
            navigate(href);
          }
        }, 100);
      });
    });
  }
</script>
