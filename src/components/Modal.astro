---
import { isModalOpen } from "../stores/modalStore";
import ModalContent from "./ModalContent";
---

<div class="modal-container" data-modal-open={isModalOpen.get()}>
  <div
    class="modal-overlay fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm z-20"
    id="modal-overlay"
  >
  </div>
  <div
    class="modal-content fixed top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white border border-gray-200 rounded-2xl z-30 max-w-[400px] min-w-[300px] md:w-[450px] max-h-[90vh] overflow-auto"
    role="dialog"
  >
    <ModalContent client:load />
  </div>
</div>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translate(-50%, -50%) translateY(4px);
    }
    to {
      opacity: 1;
      transform: translate(-50%, -50%) translateY(0);
    }
  }

  .modal-container {
    display: none;
  }
  .modal-container[data-modal-open="true"] {
    display: block;
  }
  .modal-container[data-modal-open="true"] .modal-content {
    animation: fadeIn 0.3s ease-out forwards;
  }

  /* Add this new style */
  :global(body.modal-open) {
    overflow: hidden;
  }
</style>

<script>
  import {
    isModalOpen,
    closeModal,
    initializeModalState,
  } from "../stores/modalStore";

  function setupModal() {
    const modalContainer = document.querySelector(".modal-container");
    const modalOverlay = document.getElementById("modal-overlay");
    const body = document.body;

    if (modalOverlay) {
      modalOverlay.addEventListener("click", () => {
        closeModal();
      });
    }

    isModalOpen.listen((open) => {
      if (modalContainer) {
        modalContainer.setAttribute("data-modal-open", open.toString());
      }
      // Toggle the 'modal-open' class on the body
      body.classList.toggle("modal-open", open);
    });

    // Initialize modal state (closes the modal)
    initializeModalState();
  }

  // Run setup on initial load
  setupModal();

  // Re-run setup on page navigation
  document.addEventListener("astro:page-load", setupModal);
</script>
